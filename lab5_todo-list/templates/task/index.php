<?php
/**
 * –®–∞–±–ª–æ–Ω: –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–¥–∞—á —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.
 *
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á, –ø–æ–∑–≤–æ–ª—è—è —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –∏—Ö –ø–æ —Å—Ç–∞—Ç—É—Å—É (–≤—Å–µ, –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ, –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ).
 * –†–µ–∞–ª–∏–∑—É–µ—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏—é –¥–ª—è –±–æ–ª—å—à–∏—Ö —Å–ø–∏—Å–∫–æ–≤ –∑–∞–¥–∞—á.
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–µ (–Ω–∞–∑–≤–∞–Ω–∏–µ, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç, –¥–µ–¥–ª–∞–π–Ω, –æ–ø–∏—Å–∞–Ω–∏–µ, —Ç–µ–≥–∏, —à–∞–≥–∏).
 * –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, —É–¥–∞–ª–µ–Ω–∏—è –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞–¥–∞—á–∏.
 * –°–æ–¥–µ—Ä–∂–∏—Ç JavaScript –¥–ª—è AJAX-–ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏.
 *
 * @var array<int, array> $tasks –ú–∞—Å—Å–∏–≤ –∑–∞–¥–∞—á –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.
 *                               –ö–∞–∂–¥–∞—è –∑–∞–¥–∞—á–∞ - –∞—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω—ã–π –º–∞—Å—Å–∏–≤ —Å –ø–æ–ª—è–º–∏ –∏–∑ –ë–î.
 * @var int    $page         –ù–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏.
 * @var int    $totalPages   –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü –ø–∞–≥–∏–Ω–∞—Ü–∏–∏.
 * @var string $filter       –¢–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä ('all', 'completed', 'incomplete').
 */
?>
<h1>–°–ø–∏—Å–æ–∫¬†–≤—Å–µ—Ö¬†–∑–∞–¥–∞—á</h1>

<!-- —Ñ–∏–ª—å—Ç—Ä—ã ---------------------------------------------------------------->
<nav style="margin-bottom:20px;text-align:center">
    <?php
    $filters = [
        'all'        => '–í—Å–µ',
        'completed'  => '–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ',
        'incomplete' => '–ù–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ',
    ];
    foreach ($filters as $k => $label): ?>
        <a class="btn<?= $k === 'all' ? '3' : ($k === 'completed' ? '4' : '5') ?>"
           href="/task/index?filter=<?= $k ?>"
           style="<?= $filter === $k ? 'font-weight:700' : '' ?>">
            <?= $label ?>
        </a>
    <?php endforeach; ?>
</nav>

<p>
    <a class="btn" href="/">–ù–∞¬†–≥–ª–∞–≤–Ω—É—é</a>
    <a class="btn" href="/task/create">–°–æ–∑–¥–∞—Ç—å¬†–∑–∞–¥–∞—á—É</a>
</p>

<?php if (empty($tasks)): ?>
    <p>–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç.</p>
<?php else: ?>
    <ul class="task-list">
        <?php foreach ($tasks as $t):

            // ‚Äî –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç ------------------------------------------------------
            $prioClass = match ($t['priority']) {
                'high'   => 'priority-high',
                'medium' => 'priority-medium',
                default  => 'priority-low'
            };

            // ‚Äî –¥–µ–¥–ª–∞–π–Ω --------------------------------------------------------
            [$msg, $deadlineClass] = (function (?string $date): array {
                if (!$date)   return ['–î–∞—Ç–∞ –Ω–µ¬†—É–∫–∞–∑–∞–Ω–∞',       'deadline-none'];
                $d = new DateTime($date);
                $now = new DateTime();
                $diff = (int)$now->diff($d)->format('%r%a');
                return match (true) {
                    $diff < 0  => ['–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ –Ω–∞¬†' . abs($diff) . '¬†–¥–Ω.', 'deadline-overdue'],
                    $diff === 0 => ['–î–µ–¥–ª–∞–π–Ω —Å–µ–≥–æ–¥–Ω—è!',              'deadline-critical'],
                    $diff <= 5  => ['–û—Å—Ç–∞–ª–æ—Å—å ' . $diff . '¬†–¥–Ω.',     'deadline-critical'],
                    default     => ['–û—Å—Ç–∞–ª–æ—Å—å ' . $diff . '¬†–¥–Ω.',     'deadline-normal'],
                };
            })($t['due_date'] ?? null);

            $id   = (int)$t['id'];
            $done = (bool)$t['completed'];
        ?>
            <li class="task-item" style="<?= $done ? 'opacity:.65' : '' ?>">
                <div class="task-title">
                    <a href="/task/show?id=<?= $id ?>">
                        <?= htmlspecialchars($t['title'], ENT_QUOTES) ?>
                    </a>
                    <!-- Info button -->
                    <a class="btn btn-info" href="/task/show?id=<?= $id ?>" style="margin-left:10px">‚Ñπ Info</a>
                    <?php if ($done): ?>
                        <span style="color:green;margin-left:8px">‚úî</span>
                    <?php endif; ?>
                </div>

                <div class="task-meta">
                    <span class="priority-label <?= $prioClass ?>">
                        <?= htmlspecialchars($t['priority']) ?>
                    </span>
                    <span>
                        –î–µ–¥–ª–∞–π–Ω: <?= htmlspecialchars($t['due_date'] ?: '‚Äî') ?>
                        <span class="deadline-label <?= $deadlineClass ?>">
                            <?= $msg ?>
                        </span>
                    </span>
                </div>

                <?php if ($t['description']): ?>
                    <p class="task-description"><?= nl2br(htmlspecialchars($t['description'])) ?></p>
                <?php endif; ?>

                <?php if ($t['tags']): ?>
                    <p class="tags"><em>–¢—ç–≥–∏: <?= implode(', ', json_decode($t['tags'], true) ?: []) ?></em></p>
                <?php endif; ?>

                <?php if ($t['steps']): ?>
                    <div class="task-steps">
                        <p><strong>–®–∞–≥–∏:</strong></p>
                        <ul>
                            <?php foreach (json_decode($t['steps'], true) ?: [] as $step): ?>
                                <li><?= htmlspecialchars($step) ?></li>
                            <?php endforeach; ?>
                        </ul>
                    </div>
                <?php endif; ?>

                <!-- –∫–Ω–æ–ø–∫–∏ ----------------------------------------------------->
                <div style="margin-top:10px">
                    <button data-toggle data-id="<?= $id ?>" class="btn">
                        <?= $done ? '‚Ü©¬†–û—Ç–º–µ–Ω–∏—Ç—å' : '‚úî¬†–í—ã–ø–æ–ª–Ω–∏—Ç—å' ?>
                    </button>

                    <form action="/task/delete" method="post" style="display:inline">
                        <input type="hidden" name="id" value="<?= $id ?>">
                        <button class="btn" style="background:#ff3b30"
                                onclick="return confirm('–£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É?')">üóë</button>
                    </form>
                </div>
            </li>
        <?php endforeach; ?>
    </ul>

    <!-- –ø–∞–≥–∏–Ω–∞—Ü–∏—è ------------------------------------------------------------>
    <?php if ($totalPages > 1): ?>
        <div style="text-align:center;margin-top:20px">
            <?php for ($i = 1; $i <= $totalPages; $i++): ?>
                <a href="/task/index?page=<?= $i ?>&filter=<?= $filter ?>"
                   style="<?= $i === $page ? 'font-weight:700' : '' ?>">
                   <?= $i ?>
                </a>
                <?= $i < $totalPages ? ' | ' : '' ?>
            <?php endfor; ?>
        </div>
    <?php endif; ?>
<?php endif; ?>

<!-- AJAX‚Äë–ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å "–≤—ã–ø–æ–ª–Ω–µ–Ω–æ/–Ω–µ¬†–≤—ã–ø–æ–ª–Ω–µ–Ω–æ" ---------------------------->
<script>
document.addEventListener('click', e => {
    if (!e.target.matches('[data-toggle]')) return;
    e.preventDefault();
    const btn = e.target, id = btn.dataset.id;
    fetch('/task/toggle', {
        method: 'POST',
        body: new URLSearchParams({id})
    })
    .then(r => r.json())
    .then(json => location.reload())
    .catch(() => alert('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞'));
});
</script>